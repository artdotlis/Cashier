name: tests

on:
  push:
    branches: [ master ]
  release:
    types: [ created ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10" ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pylint pytest coverage mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: pylint
        run: |
          pylint `find src -iname '*.py'|grep -v __init__.py|grep -v ^test_|grep -v ^fix_|xargs`
      - name: upload pylint badge
        uses: actions/upload-artifact@v2
        with:
          name: pylint_score_${{ matrix.python-version }}
          path: output/test/cr_pylint_${{ matrix.python-version }}.svg
      - name: mypy
        run: |
          mypy src
      - name: pytest
        run: |
          coverage run -m pytest test
          coverage report -m
